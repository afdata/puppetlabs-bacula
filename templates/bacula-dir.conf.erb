# Variables
# @@FD_PASSWORD@@
# @@DIR_PASSWORD@@
# @@SD_PASSWORD@@
# @@BACULA_HOSTNAME@@
# @@DB_PASSWORD@@
# @@ADMIN_EMAIL@@
# @@SENDER_EMAIL@@

# gen hash
# hash=$(openssl rand -base64 24) ; while [ `echo $hash | grep /` ] ; do hash=$(openssl rand -base64 24)  ; done ; echo $hash
# selinux
# semanage fcontext -a -t bacula_store_t '/mnt/bacula(/.*)?'

#
# define myself, the bacula director
#
Director {
  Name = "<%= @director_name -%>:director"
  DIRport = 9101
  QueryFile = "/etc/bacula/query.sql"
  WorkingDirectory = "<%= @working_directory -%>"
  PidDirectory = "<%= @pid_directory -%>"
  Maximum Concurrent Jobs = 20
  Password = "<%= @password -%>"
  Messages = "<%= @director_name -%>:messages:daemon"
}

#
# do a backup from the default catalog of bacula
#
Job {
  Name = "catalog"
  JobDefs = default
  Level = Full
  Client = "<%= @fqdn -%>"
  FileSet = "catalog"
  Schedule = "catalog"
  Pool = catalog
  RunBeforeJob = "/usr/libexec/bacula/make_catalog_backup.pl <%= @director_name -%>:catalog:<%= @db_backend %>"
  RunAfterJob  = "/usr/libexec/bacula/delete_catalog_backup"
  Write Bootstrap = "<%= @working_directory -%>/%n.bsr"
  Priority = 11
}

#
# default restore job, required in generall to restore files
#
Job {
   Name = restore
   Type = Restore
   Messages = <%= @director_name -%>:messages:default
   Pool = daily
   Client = "<%= @fqdn -%>"
   FileSet = linux:default
   Where = /
}

#
# Default UNIX/Linux Job Definition
#
JobDefs {
  Name = default
  Type = Backup
  FileSet = linux:default
  Storage = <%= @storage_name -%>:storage:default
  Messages = "<%= @director_name -%>:messages:daemon"
  Accurate = Yes
  Max Start Delay = 12 Hours
  Max Run Time = 14 Hours
  Max Wait Time = 3 Hours
  Pool = daily
  Priority = 10
  Schedule = default
  Write Bootstrap = "<%= @working_directory -%>/%c.bsr"
}

#
# List of default UNIX/Linux files
#
FileSet {

  Name = "linux:default"
  Ignore FileSet Changes = yes

  Include {
    Options {
      signature = SHA1
      compression = GZIP6
      onefs = yes
      Accurate = Yes
      aclsupport = yes
      sparse = yes
      regexdir = "^/var/.*/proc/.*"
      regexdir   = "^/mnt/.*"
      wildfile = "/.journal"
      wildfile = "/.fsck"
      regexdir = "^/dev/.*"
      regexdir = "^/cgroup/.*"
      regexdir = "^/selinux/.*"
      regexdir = "^/var/lib/docker/.*"
      regexdir = "^/var/lib/pgsql/data/base.*"
      regexdir = "^/var/lib/mysql/.*"
      regexdir = "^/rhev/data-center/mnt/.*"
      wildfile = "^/var/log/bacula/bacula.log"
      exclude = yes
    }
    File = "\\|bash -c \"grep -e btrfs -e ext4 -e ext3 -e ext2 -e udf -e ' xfs' -e reiserfs -e ntfs -e hfs -e msdos -e fat -e jbd2 -e jfs -e gfs2 -e ocfs2 /proc/mounts | awk '{print \$2}'\""
   }
}

#
# default windows file set, for all files, take care
#
FileSet {
  Name = "windows:default"
  Ignore FileSet Changes = yes
  Enable VSS = yes
  Include {
    Options {
      signature = SHA1
      compression = GZIP6
      Accurate = Yes
      IgnoreCase = yes
    }
    Options {
      Exclude = yes
      WildFile = "[A-Z]:/pagefile.sys"
      WildFile = "[A-Z]:/hiberfil.sys"
    }
    File = "c:/"
  }
}

#
# for the catalog file the backup
#
FileSet {
  Name = "catalog"
  Include {
    Options {
      signature = SHA1
      compression = GZIP6
    }
    File = "<%= @working_directory -%>/bacula.sql"
  }
}

#
# default schedule, 7 day increment, 1 month differential max 4 times, and every 2 month one full backup
#
Schedule {
  Name = "default"
  Run = Level=Incremental Pool=daily mon-sat at <%= @starttime %>
  Run = Level=Differential Pool=weekly 2nd-5th sun at <%= @starttime %>
  Run = Level=Full Pool=monthly 1st sun at <%= @starttime %>
}

Schedule {
  Name = "catalog"
  Run = Full sun-sat at 07:10
}

#
# Database settings
#
Catalog {
  Name = "<%= @director_name -%>:catalog:<%= @db_backend %>"
  dbname = "<%= @db_database -%>"; dbdriver = dbi:<%= @db_backend %>
  <% unless @db_backend == 'sqlite' -%>
  dbaddress = "<%= @db_host %>"; dbport = <%= @db_port %>; user = <%= @db_user %>; password = <%= @db_password %>
  <% end %>
}

#
# Definition of file storage device
#
Storage {
  Name = "<%= @storage_name -%>:storage:default"
  Address = <%= @storage_name %>
  SDPort = 9103
  Password = "<%= @storage_password -%>"
  Device = FileStorage
  Media Type = File
  Maximum Concurrent Jobs = 10
  Autochanger = yes
}


#
# Pool for catalog images
#
Pool {
  Name = catalog
  ScratchPool = scratch
  Pool Type = Backup
  Storage = <%= @storage_name -%>:storage:default
  Recycle = yes
  AutoPrune = yes
  Action On Purge = Truncate
  Volume Retention = 6 days
  Maximum Volume Jobs = 3
  Label Format = Bacula-Catalog.
}

#
# for daily backups the pool
#
Pool {
  Name = daily
  ScratchPool = scratch
  Pool Type = Backup
  Storage = <%= @storage_name -%>:storage:default
  Recycle = yes
  AutoPrune = yes
  Action On Purge = Truncate
  Volume Retention = 6 days
  Maximum Volume Jobs = 1
  Label Format = Bacula-Daily.
}

#
# for weekly retention the backup
#
Pool {
  Name = weekly
  Pool Type = Backup
  ScratchPool = scratch
  Storage = <%= @storage_name -%>:storage:default
  Recycle = yes
  AutoPrune = yes
  Action On Purge = Truncate
  Volume Retention = 13 days
  Maximum Volume Jobs = 1
  Label Format = Bacula-Weekly.
}

#
# the full backup pool, every
#
Pool {
  Name = monthly
  Pool Type = Backup
  ScratchPool = scratch
  Storage = <%= @storage_name -%>:storage:default
  Recycle = yes
  AutoPrune = yes
  Action On Purge = Truncate
  Volume Retention = 2 months
  Maximum Volume Jobs = 1
  Label Format = Bacula-Monthly.
}

#
# Scratch pool definition
#
Pool {
  Name = scratch
  Storage = <%= @storage_name -%>:storage:default
  Action On Purge = Truncate
  Volume Retention = 3 Days
  Pool Type = Backup
  Label Format = Bacula-Scratch.
}

#
# default mail messages
#
Messages {
  Name = "<%= @director_name -%>:messages:default"
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<<%= @mail_from -%>\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<<%= @mail_from -%>\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = "<%= @mail_to -%>" = warning, error, fatal, security, alert
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}

#
# messages from the director
#
Messages {
  Name = "<%= @director_name -%>:messages:daemon"
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<<%= @mail_from -%>\>\" -s \"Bacula director %t %e (for %c)\" %r"
  mail = "<%= @mail_to -%>" = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

<% if @use_console -%>
# Restricted console used by tray-monitor to get the status of the director
Console {
  Name = "<%= @director_name -%>:monitor:director"
  Password = "<%= @console_password -%>"
  CommandACL = status, .status
}
<% end -%>

#
# Include additional configuration
#
@|"sh -c 'for f in `find /etc/bacula/bacula-dir.d -type f -name \"*.conf\"` ; do echo @${f} ; done'"
